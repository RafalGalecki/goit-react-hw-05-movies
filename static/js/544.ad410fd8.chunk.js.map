{"version":3,"file":"static/js/544.ad410fd8.chunk.js","mappings":"4JAiBA,IAdmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACI,4BACI,eAAIC,MAAO,CAACC,aAAc,QAA1B,SAAoCH,KACpC,wBAAKC,MAGhB,C,wFCRYG,E,QAAUC,GAAAA,GAAH,iQ,SCYpB,EAV0B,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACpD,OACE,SAACL,EAAD,WACE,UAAC,KAAD,CAAMI,GAAE,UAAKA,GAAME,MAAO,CAAED,KAAMA,GAAlC,oBACYF,MAFAD,EAMjB,C,oIC2BD,UAjCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAYC,EAAAA,EAAAA,MAalB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKC,EAAAA,EAAAA,MADL,OACZC,EADY,OAGhBN,EADe,OAAbM,EACQA,EAEA,IALM,2CAAH,qDAQjBF,GACD,GAAE,KAED,2BACE,SAAC,IAAD,CAAYjB,MAAM,iBAAlB,SACGY,GACCA,EAAOQ,KAAI,gBAAGd,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACT,SAAC,IAAD,CAEEA,WAAYA,EACZC,GAAI,UAAYF,EAChBG,KAAMK,EACNR,QAASA,GAJJA,EAFE,OAYpB,C,6MC9BKe,EAAS,mCAAG,WAAOC,EAASC,GAAhB,0FACTC,EAAAA,EAAAA,IALe,+BAMJF,EAAS,CACvBG,QAAO,QACLC,QATe,mCAUfC,SAAU,QACVC,KAAM,GACHL,KAGNM,MAAK,SAAAV,GACJ,OAAOA,CACR,IACAW,OAAM,SAAAC,GACLC,QAAQC,IAAI,QAASF,EACtB,KAfa,2CAAH,wDAkBTb,EAAiB,mCAAG,sGACDG,EAAU,uBADT,UAEP,QADXF,EADkB,iDAGf,MAHe,cAKpBP,EAAS,GACbsB,EAAiBf,EAASgB,KAAKC,QAASxB,GANhB,kBAOjBA,GAPiB,2CAAH,qDAUjBsB,EAAmB,SAACf,EAAUP,GAClCO,EAASkB,SAAQ,SAAAC,GACf,OAAO1B,EAAO2B,KAAK,CAAEjC,QAASgC,EAAME,GAAIjC,WAAY+B,EAAMtC,OAC3D,GACF,EAEKyC,EAAc,mCAAG,WAAMC,GAAN,kFACfnB,EAAW,CACfmB,MAAOA,EACPd,KAAM,GAHa,SAKEP,EAAU,gBAAiBE,GAL7B,UAMJ,QADXJ,EALe,iDAOZ,MAPY,cASjBP,EAAS,GACbsB,EAAiBf,EAASgB,KAAKC,QAASxB,GAVnB,kBAWdA,GAXc,2CAAH,sDAcd+B,EAAe,mCAAG,WAAMH,GAAN,yGACCnB,EAAU,UAAD,OAAWmB,IADrB,UAEL,QADXrB,EADgB,iDAGb,MAHa,gBAMpBA,EAASgB,KADHS,EALc,EAKdA,YAAa5C,EALC,EAKDA,MAAO6C,EALN,EAKMA,aAAcC,EALpB,EAKoBA,aAAcC,EALlC,EAKkCA,WAAYC,EAL9C,EAK8CA,SAAUC,EALxD,EAKwDA,OAExEC,EAAe,CACnBC,WAAY,kCAAoCP,EAChD5C,MAAAA,EACAoD,YAAY,GAAD,OAAK,IAAIC,KAAKR,GAAcS,eACvCC,YAAaT,EACbU,UAAWT,EACXC,SAAAA,EACAC,OAAAA,GAdoB,kBAgBfC,GAhBe,2CAAH,sDAmBfO,EAAY,mCAAG,WAAMjB,GAAN,yFACInB,EAAU,UAAD,OAAWmB,EAAX,aADb,UAEF,QADXrB,EADa,iDAGV,MAHU,cAKfuC,EAAO,GACXvC,EAASgB,KAAKuB,KAAKrB,SAAQ,SAAAsB,GACzB,IAAQnB,EAAsCmB,EAAtCnB,GAAIoB,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAChC,OAAOJ,EAAKnB,KAAK,CACfC,GAAAA,EACAuB,OAAQ,kCAAoCH,EAC5CC,KAAAA,EACAC,UAAAA,GAEH,IAdkB,kBAeZJ,GAfY,2CAAH,sDAkBZM,EAAe,mCAAG,WAAMxB,GAAN,yFACCnB,EAAU,UAAD,OAAWmB,EAAX,aADV,UAEL,QADXrB,EADgB,iDAGb,MAHa,cAKlB8C,EAAU,GACd9C,EAASgB,KAAKC,QAAQC,SAAQ,SAAAsB,GAC5B,IAAQnB,EAAwBmB,EAAxBnB,GAAI0B,EAAoBP,EAApBO,OAAQC,EAAYR,EAAZQ,QACpB,OAAOF,EAAQ1B,KAAK,CAAEC,GAAAA,EAAI0B,OAAAA,EAAQC,QAAAA,GACnC,IATqB,kBAUfF,GAVe,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/MoviesListElement/MoviesListElement.styled.js","components/MoviesListElement/MoviesListElement.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ title, children }) => {\n    return (\n        <div>\n            <h2 style={{marginBottom: '10px'}}>{title}</h2>\n            <ul>{children}</ul>\n        </div>\n    )\n};\n\nMoviesList.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n}\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const MovieLi = styled.li`\n  font-weight: 500;\n  padding: 2px;\n  transition-property: transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.996);\n  }\n\n  \n`;","import React from 'react';\nimport { Link } from '../SharedLayout/SharedLayout.styled';\nimport { MovieLi } from './MoviesListElement.styled';\n\nconst MoviesListElement = ({ movieId, movieTitle, to, from }) => {\n  return (\n    <MovieLi key={movieId}>\n      <Link to={`${to}`} state={{ from: from }}>\n        &#10139; {movieTitle}\n      </Link>\n    </MovieLi>\n  );\n};\n\nexport default MoviesListElement;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesListElement from 'components/MoviesListElement/MoviesListElement';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const locaction = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await getTrendingMovies();\n      if (response !== null) {\n        setMovies(response);\n      } else {\n        setMovies([]);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return (\n    <main>\n      <MoviesList title=\"Trending today\">\n        {movies &&\n          movies.map(({ movieId, movieTitle }) => (\n            <MoviesListElement\n              key={movieId}\n              movieTitle={movieTitle}\n              to={'movies/' + movieId}\n              from={locaction}\n              movieId={movieId}\n            />\n          ))}\n      </MoviesList>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n// This is tha main fetch fuction\nconst fetchTMDB = async (urlPath, myParams) => {\n  return axios\n    .get(BASE_URL + urlPath, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        ...myParams,\n      },\n    })\n    .then(response => {\n      return response;\n    })\n    .catch(error => {\n      console.log('error', error);\n    });\n};\n\nconst getTrendingMovies = async () => {\n  const response = await fetchTMDB('/trending/movie/day');\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst handleMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({ movieId: movie.id, movieTitle: movie.title });\n  });\n};\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst getMovieDetails = async id => {\n  const response = await fetchTMDB(`/movie/${id}`);\n  if (response === null) {\n    return null;\n  }\n  const { poster_path, title, release_date, vote_average, vote_count, overview, genres } =\n    response.data;\n  const movieDetails = {\n    posterPath: 'https://image.tmdb.org/t/p/w300' + poster_path,\n    title,\n    releaseDate: `${new Date(release_date).getFullYear()}`,\n    voteAverage: vote_average,\n    voteCount: vote_count,\n    overview,\n    genres,\n  };\n  return movieDetails;\n};\n\nconst getMovieCast = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let cast = [];\n  response.data.cast.forEach(element => {\n    const { id, profile_path, name, character } = element;\n    return cast.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      character,\n    });\n  });\n  return cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await fetchTMDB(`/movie/${id}/reviews`);\n  if (response === null) {\n    return null;\n  }\n  let reviews = [];\n  response.data.results.forEach(element => {\n    const { id, author, content } = element;\n    return reviews.push({ id, author, content });\n  });\n  return reviews;\n};\n\nexport {\n  getTrendingMovies,\n  getQueryMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n"],"names":["title","children","style","marginBottom","MovieLi","styled","movieId","movieTitle","to","from","state","useState","movies","setMovies","locaction","useLocation","useEffect","fetchMovies","getTrendingMovies","response","map","fetchTMDB","urlPath","myParams","axios","params","api_key","language","page","then","catch","error","console","log","handleMoviesData","data","results","forEach","movie","push","id","getQueryMovies","query","getMovieDetails","poster_path","release_date","vote_average","vote_count","overview","genres","movieDetails","posterPath","releaseDate","Date","getFullYear","voteAverage","voteCount","getMovieCast","cast","element","profile_path","name","character","srcImg","getMovieReviews","reviews","author","content"],"sourceRoot":""}