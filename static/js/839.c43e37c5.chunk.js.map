{"version":3,"file":"static/js/839.c43e37c5.chunk.js","mappings":"sPAQMA,EAAY,SAACC,EAAcC,GAC/B,OAAOC,EAAAA,EAAAA,IANe,+BAMMF,EAAc,CACxCG,QAAO,QACLC,QATiB,mCAUjBC,SAAU,QACVC,KAAM,GACHL,KAEJM,MAAK,SAAAC,GACN,OAAOA,CACR,IAAEC,OAAM,SAAAC,GACPC,QAAQC,IAAI,QAASF,EACtB,GACF,EAEKG,EAAiB,mCAAG,8FACH,sBACfZ,EAAW,CAAC,EAFM,SAGDF,EAFF,sBAE0BE,GAHvB,UAIP,QADXO,EAHkB,iDAKf,MALe,cAOpBM,EAAS,GACbC,EAAcP,EAASQ,KAAKC,QAASH,GARb,kBASjBA,GATiB,4CAAH,qDAYjBC,EAAgB,SAACP,EAAUM,GAC/BN,EAASU,SAAQ,SAAAC,GACf,OAAOL,EAAOM,KAAK,CAAEC,QAASF,EAAMG,GAAIC,WAAYJ,EAAMK,OAC3D,GACF,E,SCtBD,EAdmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACI,4BACI,wBAAKD,KACL,wBAAKC,MAGhB,ECJD,EAJuB,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,QAASE,EAAiB,EAAjBA,WACjC,OAAO,wBAAmBA,GAAVF,EACjB,EC4BD,EA3Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACKhB,IADL,OACZL,EADY,OAElBG,QAAQC,IAAI,WAAYJ,GAEtBmB,EADe,OAAbnB,EACQA,EAEA,IANM,2CAAH,qDASjBqB,GACD,GAAE,KAED,2BACE,SAAC,EAAD,CAAYL,MAAM,iBAAlB,SACGV,GACCA,EAAOgB,KAAI,gBAAGT,EAAH,EAAGA,QAASE,EAAZ,EAAYA,WAAZ,OACT,SAAC,EAAD,CAA8BA,WAAYA,GAArBF,EADZ,OAMpB,C","sources":["services/api.js","components/MoviesList.jsx","components/MoviesListItem.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n\n// This is tha main fetch fuction\nconst fetchTMDB = (specifiedUrl, myParams) => {\n  return axios.get(BASE_URL + specifiedUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n      ...myParams,\n    },\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    console.log('error', error)\n  })\n}\n\nconst getTrendingMovies = async () => {\n  const specifiedUrl = '/trending/movie/day';\n  const myParams = {};\n  const response = await fetchTMDB(specifiedUrl, myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  getMoviesData(response.data.results, movies);\n  return movies;\n}\n\nconst getMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({ movieId: movie.id, movieTitle: movie.title });\n  })\n}\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  getMoviesData(response.data.results);\n  return movies;\n};\n\nexport {getTrendingMovies, getQueryMovies}\n//export default getTrendingMovies;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ title, children }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            <ul>{children}</ul>\n        </div>\n    )\n};\n\nMoviesList.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n}\n\nexport default MoviesList;","import React from 'react';\n\nconst MoviesListItem = ({ movieId, movieTitle }) => {\n  return <li key={movieId}>{movieTitle}</li>;\n};\n\nexport default MoviesListItem;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport MoviesList from 'components/MoviesList';\nimport MoviesListItem from 'components/MoviesListItem';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await getTrendingMovies();\n      console.log('response', response);\n      if (response !== null) {\n        setMovies(response);\n      } else {\n        setMovies([]);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return (\n    <main>\n      <MoviesList title=\"Trending today\">\n        {movies &&\n          movies.map(({ movieId, movieTitle }) => (\n            <MoviesListItem key={movieId} movieTitle={movieTitle} />\n          ))}\n      </MoviesList>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["fetchTMDB","specifiedUrl","myParams","axios","params","api_key","language","page","then","response","catch","error","console","log","getTrendingMovies","movies","getMoviesData","data","results","forEach","movie","push","movieId","id","movieTitle","title","children","useState","setMovies","useEffect","fetchMovies","map"],"sourceRoot":""}