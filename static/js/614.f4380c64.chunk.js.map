{"version":3,"file":"static/js/614.f4380c64.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/MoviesListElement/MoviesListElement.styled.js","webpack://goit-react-hw-05-movies/./src/components/MoviesListElement/MoviesListElement.module.css?f067","components/MoviesListElement/MoviesListElement.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesFilter/MoviesFilter.module.css?fa05","components/MoviesFilter/MoviesFilter.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesGrid\":\"MoviesList_moviesGrid__FjeEa\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css'\n\nconst MoviesList = ({ title, children }) => {\n    return (\n        <div>\n            <h2 style={{marginBottom: '10px'}}>{title}</h2>\n            <ul className={css.moviesGrid} >{children}</ul>\n        </div>\n    )\n};\n\nMoviesList.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n}\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const MovieLi = styled.li`\n  display: flex;\n  flex-direction: row;\n  font-weight: 500;\n  padding: 2px;\n  transition-property: transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.996);\n  }\n`;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"MoviesListElement_backdrop__wJv1T\",\"thumb\":\"MoviesListElement_thumb__Os8-r\",\"label\":\"MoviesListElement_label__0SgiT\"};","import React from 'react';\nimport { Link } from '../SharedLayout/SharedLayout.styled';\nimport { MovieLi } from './MoviesListElement.styled';\nimport css from './MoviesListElement.module.css';\nimport placeholderBackdrop from '../../images/placeholderBackdrop.jpg';\n\nconst MoviesListElement = ({\n  movieId,\n  movieTitle,\n  movieBackdrop,\n  to,\n  from,\n}) => {\n  const placeholder = !movieBackdrop.includes(null)\n    ? movieBackdrop\n    : placeholderBackdrop;\n  return (\n    <MovieLi key={movieId}>\n      <Link className={css.thumb} to={`${to}`} state={{ from: from }}>\n        <img className={css.backdrop} src={placeholder} alt={movieTitle} />\n        <p className={css.label}>{movieTitle}</p>\n      </Link>\n    </MovieLi>\n  );\n};\n\nexport default MoviesListElement;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  margin: 0;\n  margin-bottom: 20px;\n  height: 30px;\n  width: 70vw;\n  gap: 4px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  height: 100%;\n  width: 320px;\n  border-color: white;\n  border-radius: 4px;\n  outline: none;\n  color: #261c09;\n  box-shadow: 4px 4px 6px rgba(58, 43, 12, 0.22);\n`;\n\nexport const Button = styled.button`\n  text-align: center;\n  height: 100%;\n  width: 100px;\n\n  padding: 0 20px;\n  background-color: orange;\n  color: white;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  box-shadow: inset 3px 6px 16px -8px rgba(249, 243, 232, 0.9),\n    inset -2px -2px 8px 1px rgba(77, 57, 19, 0.75),\n    4px 4px 6px rgba(58, 43, 12, 0.22);\n  transition-property: box-shadow;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: inset 2px 2px 3px rgba(77, 57, 19, 0.75),\n      inset -2px -2px 4px rgba(249, 243, 232, 0.6);\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nconst Searchbar = ({ searcher }) => {\n  const [filter, setFilter] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searcher(filter);\n    setFilter('');\n  };\n  const handleChange = event => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={event => handleSubmit(event)}>\n      <Input\n        type=\"search\"\n        name=\"query\"\n        value={filter}\n        placeholder=\"Enter a movie title\"\n        onChange={event => handleChange(event)}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchbar.propTypes = {\n  searcher: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterGrid\":\"MoviesFilter_filterGrid__g-Bqt\",\"filterItem\":\"MoviesFilter_filterItem__5PQGT\"};","import React from 'react';\nimport css from './MoviesFilter.module.css';\n\nconst GENRES = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nconst MoviesFilter = ({ onClick }) => {\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n\n  return (\n    <ul className={css.filterGrid}>\n      {GENRES.map((element, index) => {\n        return (\n          <li key={index}>\n            <button\n              className={css.filterItem}\n              style={{ backgroundColor: getRandomHexColor() }}\n              type=\"button\"\n              name={element.name}\n              value={element.id}\n              onClick={onClick}\n            >\n              {element.name}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesFilter;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesListElement from 'components/MoviesListElement/MoviesListElement';\nimport { getQueryMovies, getTheBestOfGenre } from 'services/api';\nimport MoviesFilter from 'components/MoviesFilter/MoviesFilter';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filter, setFilter] = useState(searchParams.get('query'));\n  const [genre, setGenre] = useState(null);\n  const location = useLocation();\n  const [isMovie, setIsMovie] = useState(null);\n\n  const searcher = filter => {\n    if (filter) {\n      setFilter(filter);\n    }\n  };\n  const handleOnClick = event => {\n    setGenre(Number(event.target.value));\n    console.log('VAL', genre);\n  };\n  useEffect(() => {\n    if (genre) {\n      const getGenreMovies = async () => {\n        const response = await getTheBestOfGenre(genre);\n        if (response !== null) {\n          setMovies(response);\n          setIsMovie(true);\n        }\n        if (response.length === 0) {\n          setIsMovie(false);\n        }\n      };\n      getGenreMovies();\n    }\n    if (filter) {\n      setSearchParams({ query: filter });\n      const getMovies = async () => {\n        const response = await getQueryMovies(filter);\n        if (response !== null) {\n          setMovies(response);\n          setIsMovie(true);\n        }\n        if (response.length === 0) {\n          setIsMovie(false);\n        }\n      };\n      getMovies();\n    }\n  }, [filter, genre, setSearchParams]);\n\n  return (\n    <main>\n      <Searchbar filter={filter} searcher={filter => searcher(filter)} />\n\n      {isMovie === null ? (\n        <div>\n          <h4>Search The Movie DataBase for movies</h4>\n          <MoviesFilter onClick={handleOnClick} />\n        </div>\n      ) : isMovie ? (\n        <MoviesList>\n          {movies &&\n            movies.map(({ movieId, movieTitle, movieBackdrop }) => (\n              <MoviesListElement\n                key={movieId}\n                movieTitle={movieTitle}\n                movieBackdrop={movieBackdrop}\n                to={movieId.toString()}\n                from={location}\n                movieId={movieId}\n              />\n            ))}\n        </MoviesList>\n      ) : (\n        <div>\n          <p>No results</p>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n// This is tha main fetch fuction\nconst fetchTMDB = async (urlPath, myParams) => {\n  return axios\n    .get(BASE_URL + urlPath, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        ...myParams,\n      },\n    })\n    .then(response => {\n      console.log('FULL Response:', response);\n      return response;\n    })\n    .catch(error => {\n      console.log('error', error);\n    });\n};\n\nconst getTrendingMovies = async () => {\n  const response = await fetchTMDB('/trending/movie/day');\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  console.log('Trending', response);\n  return movies;\n};\n\nconst handleMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({\n      movieId: movie.id,\n      movieTitle: movie.title,\n      movieBackdrop: 'https://image.tmdb.org/t/p/w200' + movie.backdrop_path,\n    });\n  });\n};\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst getMovieDetails = async id => {\n  const response = await fetchTMDB(`/movie/${id}`);\n  if (response === null) {\n    return null;\n  }\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline,\n  } = response.data;\n  const movieDetails = {\n    posterPath: 'https://image.tmdb.org/t/p/w300' + poster_path,\n    title,\n    releaseDate: `${new Date(release_date).getFullYear()}`,\n    voteAverage: vote_average,\n    voteCount: vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline,\n  };\n  console.log('details', response);\n  return movieDetails;\n};\n\nconst getMovieCast = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let cast = [];\n  console.log('CAST', response);\n  response.data.cast.forEach(element => {\n    const { id, profile_path, name, character } = element;\n    return cast.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      character,\n    });\n  });\n  return cast;\n};\n\nconst getMovieCrew = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let crew = [];\n  console.log('Crew', response);\n  response.data.crew.forEach(element => {\n    const { id, profile_path, name, department, job } = element;\n    return crew.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      department,\n      job,\n    });\n  });\n  return crew;\n};\n\nconst getMovieReviews = async id => {\n  const response = await fetchTMDB(`/movie/${id}/reviews`);\n  if (response === null) {\n    return null;\n  }\n  let reviews = [];\n  response.data.results.forEach(element => {\n    const { id, author, content } = element;\n    return reviews.push({ id, author, content });\n  });\n  return reviews;\n};\n\nconst getMovieSimilar = async id => {\n  const response = await fetchTMDB(`/movie/${id}/similar`);\n  if (response === null) {\n    return null;\n  }\n  let similar = [];\n  console.log('SIMILAR', response);\n  response.data.results.forEach(element => {\n    const { id, poster_path, title, release_date } = element;\n    return similar.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + poster_path,\n      title,\n      releaseDate: `${new Date(release_date).getFullYear()}`,\n    });\n  });\n  return similar;\n};\n\nconst getTheBestOfGenre = async (genre) => {\n  const response = await fetchTMDB(\n    `/discover/movie?with_genres=${genre}&sort_by=vote_average.desc&vote_count.gte=10`\n  );\n  if (response === null) {\n    return null;\n  }\n  console.log('BEST res', response)\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nexport {\n  getTrendingMovies,\n  getQueryMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieCrew,\n  getMovieReviews,\n  getMovieSimilar,\n  getTheBestOfGenre,\n};\n"],"names":["title","children","style","marginBottom","className","css","MovieLi","styled","movieId","movieTitle","movieBackdrop","to","from","placeholder","includes","placeholderBackdrop","state","src","alt","Form","Input","Button","searcher","useState","filter","setFilter","onSubmit","event","preventDefault","handleSubmit","type","name","value","onChange","target","handleChange","GENRES","id","onClick","map","element","index","backgroundColor","Math","floor","random","toString","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","genre","setGenre","location","useLocation","isMovie","setIsMovie","useEffect","getGenreMovies","getTheBestOfGenre","response","length","query","getMovies","getQueryMovies","Number","console","log","MoviesList","MoviesListElement","fetchTMDB","urlPath","myParams","axios","params","api_key","language","page","then","catch","error","getTrendingMovies","handleMoviesData","data","results","forEach","movie","push","backdrop_path","getMovieDetails","poster_path","release_date","vote_average","vote_count","overview","genres","homepage","tagline","movieDetails","posterPath","releaseDate","Date","getFullYear","voteAverage","voteCount","getMovieCast","cast","profile_path","character","srcImg","getMovieCrew","crew","department","job","getMovieReviews","reviews","author","content","getMovieSimilar","similar"],"sourceRoot":""}