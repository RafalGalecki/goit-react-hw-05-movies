{"version":3,"file":"static/js/296.034033c1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsCard/MovieDetailsCard.module.css?4584","components/MovieDetailsCard/MovieDetailsCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsAdditionalInfo/MovieDetailsAdditionalInfo.module.css?dd1f","components/MovieDetailsAdditionalInfo/MovieDetailsAdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__link\":\"MovieDetails_movie__link__AIewV\"};","// extracted by mini-css-extract-plugin\nexport default {\"movie__card\":\"MovieDetailsCard_movie__card__5wAQ4\",\"movie__poster\":\"MovieDetailsCard_movie__poster__G2no+\",\"movie__paragraph\":\"MovieDetailsCard_movie__paragraph__9OI+V\",\"movie__desc\":\"MovieDetailsCard_movie__desc__1fKsd\",\"movie__genres\":\"MovieDetailsCard_movie__genres__dgjst\",\"movie__score\":\"MovieDetailsCard_movie__score__FIjSL\",\"movie__homepage\":\"MovieDetailsCard_movie__homepage__09Zx1\"};","import React from 'react';\nimport css from './MovieDetailsCard.module.css';\n\nconst MovieDetailsCard = ({\n  posterPath,\n  title,\n  releaseDate,\n  voteAverage,\n  voteCount,\n  tagline,\n  overview,\n  genres,\n  homepage,\n}) => {\n  return (\n    <div className={[css.movie__card]}>\n      <div className={[css.movie__poster]}>\n        {!posterPath.includes(null) ? (\n          <img src={posterPath} alt={`${title}'s poster`} />\n        ) : (\n          <p>No poster yet.</p>\n        )}\n      </div>\n      <div className={[css.movie__desc]}>\n        <h2 className={[css.movie__title]}>\n          {title} <span className={[css.movie__score]}>({releaseDate})</span>\n        </h2>\n        <h4 className={[css.movie__score]}>\n          User score: {Math.round(voteAverage * 10)}% / Votes: {voteCount}\n        </h4>\n        <div className={[css.movie__paragraph]}>\n          <h4>Overview</h4>\n          {tagline && <p>&#10077; {tagline} &#10078;</p>}\n          <p>{overview}</p>\n        </div>\n        <div className={[css.movie__paragraph]}>\n          <h4>Genres</h4>\n          <ul className={[css.movie__genres]}>\n            {genres.map(element => (\n              <li key={element.id}>{element.name}</li>\n            ))}\n          </ul>\n        </div>\n        {homepage && (\n          <div className={[css.movie__paragraph]}>\n            <h4>Homepage</h4>\n\n            <a\n              className={[css.movie__homepage]}\n              href={homepage}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              &#10139; {homepage}\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie__additions\":\"MovieDetailsAdditionalInfo_movie__additions__wW2jM\",\"additions__list\":\"MovieDetailsAdditionalInfo_additions__list__IS+2e\",\"additions__item\":\"MovieDetailsAdditionalInfo_additions__item__08Am2\"};","import React from 'react';\nimport { Link } from '../SharedLayout/SharedLayout.styled';\nimport css from './MovieDetailsAdditionalInfo.module.css';\n\nconst MovieDetailsAdditionalInfo = ({ fromLocation }) => {\n  const infoLinkNames = ['cast', 'reviews', 'crew', 'similar'];\n\n  return (\n    <div className={[css.movie__additions]}>\n      <h5>Additional information</h5>\n      <ul className={[css.additions__list]}>\n        {infoLinkNames.map((element, index) => {\n          return (\n            <li key={index}>\n              <Link\n                className={[css.additions__item]}\n                to={element}\n                state={fromLocation}\n              >\n                &#10139; {element}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetailsAdditionalInfo;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Link } from '../../components/SharedLayout/SharedLayout.styled';\nimport Loader from '../../components/Loader/Loader';\nimport css from './MovieDetails.module.css';\nimport MovieDetailsCard from 'components/MovieDetailsCard/MovieDetailsCard';\nimport MovieDetailsAdditionalInfo from 'components/MovieDetailsAdditionalInfo/MovieDetailsAdditionalInfo';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getDetails = async () => {\n      const response = await getMovieDetails(id);\n      if (response !== null) {\n        setMovieDetails(response);\n      } else {\n        setMovieDetails('');\n      }\n    };\n    getDetails();\n  }, [id]);\n\n  return (\n    <main>\n      <Link className={[css.movie__link]} to={backLinkHref}>\n        &#10094; Go back\n      </Link>\n      {movieDetails && (\n        <>\n          <MovieDetailsCard\n            posterPath={movieDetails.posterPath}\n            title={movieDetails.title}\n            releaseDate={movieDetails.releaseDate}\n            voteAverage={movieDetails.voteAverage}\n            voteCount={movieDetails.voteCount}\n            tagline={movieDetails.tagline}\n            overview={movieDetails.overview}\n            genres={movieDetails.genres}\n            homepage={movieDetails.homepage}\n          />\n          <MovieDetailsAdditionalInfo\n            fromLocation={{ from: location.state.from }} />\n          \n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n// This is tha main fetch fuction\nconst fetchTMDB = async (urlPath, myParams) => {\n  return axios\n    .get(BASE_URL + urlPath, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        ...myParams,\n      },\n    })\n    .then(response => {\n      console.log('FULL Response:', response);\n      return response;\n    })\n    .catch(error => {\n      console.log('error', error);\n    });\n};\n\nconst getTrendingMovies = async () => {\n  const response = await fetchTMDB('/trending/movie/day');\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst handleMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({ movieId: movie.id, movieTitle: movie.title });\n  });\n};\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst getMovieDetails = async id => {\n  const response = await fetchTMDB(`/movie/${id}`);\n  if (response === null) {\n    return null;\n  }\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline,\n  } = response.data;\n  const movieDetails = {\n    posterPath: 'https://image.tmdb.org/t/p/w300' + poster_path,\n    title,\n    releaseDate: `${new Date(release_date).getFullYear()}`,\n    voteAverage: vote_average,\n    voteCount: vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline\n  };\n  console.log('details', response);\n  return movieDetails;\n};\n\nconst getMovieCast = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let cast = [];\n  console.log('CAST', response);\n  response.data.cast.forEach(element => {\n    const { id, profile_path, name, character } = element;\n    return cast.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      character,\n    });\n  });\n  return cast;\n};\n\nconst getMovieCrew = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let crew = [];\n  console.log('Crew', response);\n  response.data.crew.forEach(element => {\n    const { id, profile_path, name, department, job } = element;\n    return crew.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      department,\n      job,\n    });\n  });\n  return crew;\n};\n\nconst getMovieReviews = async id => {\n  const response = await fetchTMDB(`/movie/${id}/reviews`);\n  if (response === null) {\n    return null;\n  }\n  let reviews = [];\n  response.data.results.forEach(element => {\n    const { id, author, content } = element;\n    return reviews.push({ id, author, content });\n  });\n  return reviews;\n};\n\nconst getMovieSimilar = async id => {\n  const response = await fetchTMDB(`/movie/${id}/similar`);\n  if (response === null) {\n    return null;\n  }\n  let similar = [];\n  console.log('SIMILAR', response);\n  response.data.results.forEach(element => {\n    const { id, poster_path, title, release_date } = element;\n    return similar.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + poster_path,\n      title,\n      releaseDate: `${new Date(release_date).getFullYear()}`,\n    });\n  });\n  return similar;\n};\n\nexport {\n  getTrendingMovies,\n  getQueryMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieCrew,\n  getMovieReviews,\n  getMovieSimilar,\n};\n"],"names":["posterPath","title","releaseDate","voteAverage","voteCount","tagline","overview","genres","homepage","className","css","includes","src","alt","Math","round","map","element","name","id","href","target","rel","fromLocation","index","to","state","useState","movieDetails","setMovieDetails","useParams","location","useLocation","backLinkHref","from","useEffect","getDetails","getMovieDetails","response","Suspense","fallback","Loader","fetchTMDB","urlPath","myParams","axios","params","api_key","language","page","then","console","log","catch","error","getTrendingMovies","movies","handleMoviesData","data","results","forEach","movie","push","movieId","movieTitle","getQueryMovies","query","poster_path","release_date","vote_average","vote_count","Date","getFullYear","getMovieCast","cast","profile_path","character","srcImg","getMovieCrew","crew","department","job","getMovieReviews","reviews","author","content","getMovieSimilar","similar"],"sourceRoot":""}