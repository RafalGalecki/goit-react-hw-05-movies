{"version":3,"file":"static/js/415.9530f0cc.chunk.js","mappings":"0JAiBA,IAdmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACI,4BACI,wBAAKD,KACL,wBAAKC,MAGhB,C,0CCJD,IAJuB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACjC,OAAO,wBAAmBA,GAAVD,EACjB,C,kHC4BD,UA3Ba,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKC,EAAAA,EAAAA,MADL,OACZC,EADY,OAElBC,QAAQC,IAAI,WAAYF,GAEtBJ,EADe,OAAbI,EACQA,EAEA,IANM,2CAAH,qDASjBF,GACD,GAAE,KAED,2BACE,SAAC,IAAD,CAAYR,MAAM,iBAAlB,SACGK,GACCA,EAAOQ,KAAI,gBAAGX,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACT,SAAC,IAAD,CAA8BA,WAAYA,GAArBD,EADZ,OAMpB,C,gICtBKY,EAAS,mCAAG,WAAOC,EAASC,GAAhB,0FACTC,EAAAA,EAAAA,IANe,+BAMMF,EAAS,CACnCG,QAAO,QACLC,QATiB,mCAUjBC,SAAU,QACVC,KAAM,GACHL,KAEJM,MAAK,SAAAZ,GACN,OAAOA,CACR,IAAEa,OAAM,SAAAC,GACPb,QAAQC,IAAI,QAASY,EACtB,KAZe,2CAAH,wDAeTf,EAAiB,mCAAG,sGACDK,EAAU,uBADT,UAEP,QADXJ,EADkB,iDAGf,MAHe,cAKpBL,EAAS,GACboB,EAAcf,EAASgB,KAAKC,QAAStB,GANb,kBAOjBA,GAPiB,2CAAH,qDAUjBoB,EAAgB,SAACf,EAAUL,GAC/BK,EAASkB,SAAQ,SAAAC,GACf,OAAOxB,EAAOyB,KAAK,CAAE5B,QAAS2B,EAAME,GAAI5B,WAAY0B,EAAM7B,OAC3D,GACF,EAEKgC,EAAc,mCAAG,WAAMC,GAAN,kFACfjB,EAAW,CACfiB,MAAOA,EACPZ,KAAM,GAHa,SAKEP,EAAU,gBAAiBE,GAL7B,UAMJ,QADXN,EALe,iDAOZ,MAPY,cASjBL,EAAS,GACboB,EAAcf,EAASgB,KAAKC,QAAStB,GAVhB,kBAWdA,GAXc,2CAAH,qD","sources":["components/MoviesList.jsx","components/MoviesListItem.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ title, children }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            <ul>{children}</ul>\n        </div>\n    )\n};\n\nMoviesList.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n}\n\nexport default MoviesList;","import React from 'react';\n\nconst MoviesListItem = ({ movieId, movieTitle }) => {\n  return <li key={movieId}>{movieTitle}</li>;\n};\n\nexport default MoviesListItem;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport MoviesList from 'components/MoviesList';\nimport MoviesListItem from 'components/MoviesListItem';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await getTrendingMovies();\n      console.log('response', response);\n      if (response !== null) {\n        setMovies(response);\n      } else {\n        setMovies([]);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return (\n    <main>\n      <MoviesList title=\"Trending today\">\n        {movies &&\n          movies.map(({ movieId, movieTitle }) => (\n            <MoviesListItem key={movieId} movieTitle={movieTitle} />\n          ))}\n      </MoviesList>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n\n// This is tha main fetch fuction\nconst fetchTMDB = async (urlPath, myParams) => {\n  return axios.get(BASE_URL + urlPath, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n      ...myParams,\n    },\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    console.log('error', error)\n  })\n}\n\nconst getTrendingMovies = async () => {\n  const response = await fetchTMDB('/trending/movie/day');\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  getMoviesData(response.data.results, movies);\n  return movies;\n}\n\nconst getMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({ movieId: movie.id, movieTitle: movie.title });\n  })\n}\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  getMoviesData(response.data.results, movies);\n  return movies;\n};\n\nexport {getTrendingMovies, getQueryMovies}\n//export default getTrendingMovies;"],"names":["title","children","movieId","movieTitle","useState","movies","setMovies","useEffect","fetchMovies","getTrendingMovies","response","console","log","map","fetchTMDB","urlPath","myParams","axios","params","api_key","language","page","then","catch","error","getMoviesData","data","results","forEach","movie","push","id","getQueryMovies","query"],"sourceRoot":""}