{"version":3,"file":"static/js/135.b13cd68c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__card\":\"MovieDetails_movie__card__NGWuX\",\"movie__poster\":\"MovieDetails_movie__poster__HNrMD\",\"movie__paragraph\":\"MovieDetails_movie__paragraph__BXIIA\",\"movie__desc\":\"MovieDetails_movie__desc__h95ka\",\"movie__genres\":\"MovieDetails_movie__genres__qJHB-\",\"movie__score\":\"MovieDetails_movie__score__DE4wI\",\"movie__additions\":\"MovieDetails_movie__additions__9KOw7\",\"additions__list\":\"MovieDetails_additions__list__qFrmj\",\"movie__link\":\"MovieDetails_movie__link__AIewV\",\"movie__homepage\":\"MovieDetails_movie__homepage__ZJXN+\"};","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Link } from '../../components/SharedLayout/SharedLayout.styled';\nimport Loader from '../../components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getDetails = async () => {\n      const response = await getMovieDetails(id);\n      if (response !== null) {\n        setMovieDetails(response);\n      } else {\n        setMovieDetails('');\n      }\n    };\n    getDetails();\n  }, [id]);\n\n  return (\n    <main>\n      <Link className={[css.movie__link]} to={backLinkHref}>\n        &#10094; Go back\n      </Link>\n      {movieDetails && (\n        <>\n          <div className={[css.movie__card]}>\n            <div className={[css.movie__poster]}>\n              {!movieDetails.posterPath.includes(null) ? (\n                <img\n                  src={movieDetails.posterPath}\n                  alt={`${movieDetails.title}'s poster`}\n                />\n              ) : (\n                <p>No poster yet.</p>\n              )}\n            </div>\n            <div className={[css.movie__desc]}>\n              <h2 className={[css.movie__title]}>\n                {movieDetails.title}{' '}\n                <span className={[css.movie__score]}>\n                  ({movieDetails.releaseDate})\n                </span>\n              </h2>\n              <h4 className={[css.movie__score]}>\n                User score: {Math.round(movieDetails.voteAverage * 10)}% /\n                Votes: {movieDetails.voteCount}\n              </h4>\n              <div className={[css.movie__paragraph]}>\n                <h4>Overview</h4>\n                {movieDetails.tagline && (\n                  <p>&#10077; {movieDetails.tagline} &#10078;</p>\n                )}\n                <p>{movieDetails.overview}</p>\n              </div>\n              <div className={[css.movie__paragraph]}>\n                <h4>Genres</h4>\n                <ul className={[css.movie__genres]}>\n                  {movieDetails.genres.map(element => (\n                    <li key={element.id}>{element.name}</li>\n                  ))}\n                </ul>\n              </div>\n              {movieDetails.homepage && (\n                <div className={[css.movie__paragraph]}>\n                  <h4>Homepage</h4>\n\n                  <a\n                    className={[css.movie__homepage]}\n                    href={movieDetails.homepage}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    &#10139; {movieDetails.homepage}\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className={[css.movie__additions]}>\n            <h5>Additional information</h5>\n            <ul className={[css.additions__list]}>\n              <li>\n                <Link\n                  className={[css.additions__item]}\n                  to=\"cast\"\n                  state={{ from: location.state.from }}\n                >\n                  &#10139; Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  className={[css.additions__item]}\n                  to=\"reviews\"\n                  state={{ from: location.state.from }}\n                >\n                  &#10139; Reviews\n                </Link>\n              </li>\n              <li>\n                <Link\n                  className={[css.additions__item]}\n                  to=\"crew\"\n                  state={{ from: location.state.from }}\n                >\n                  &#10139; Crew\n                </Link>\n              </li>\n              <li>\n                <Link\n                  className={[css.additions__item]}\n                  to=\"similar\"\n                  state={{ from: location.state.from }}\n                >\n                  &#10139; Similar movies &#128521;\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const API_KEY = '7e626872ba2c457d969115031d94d6fb';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const PAGE = 1;\n\n// This is tha main fetch fuction\nconst fetchTMDB = async (urlPath, myParams) => {\n  return axios\n    .get(BASE_URL + urlPath, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        ...myParams,\n      },\n    })\n    .then(response => {\n      console.log('FULL Response:', response);\n      return response;\n    })\n    .catch(error => {\n      console.log('error', error);\n    });\n};\n\nconst getTrendingMovies = async () => {\n  const response = await fetchTMDB('/trending/movie/day');\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst handleMoviesData = (response, movies) => {\n  response.forEach(movie => {\n    return movies.push({ movieId: movie.id, movieTitle: movie.title });\n  });\n};\n\nconst getQueryMovies = async query => {\n  const myParams = {\n    query: query,\n    page: 1,\n  };\n  const response = await fetchTMDB('/search/movie', myParams);\n  if (response === null) {\n    return null;\n  }\n  let movies = [];\n  handleMoviesData(response.data.results, movies);\n  return movies;\n};\n\nconst getMovieDetails = async id => {\n  const response = await fetchTMDB(`/movie/${id}`);\n  if (response === null) {\n    return null;\n  }\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline,\n  } = response.data;\n  const movieDetails = {\n    posterPath: 'https://image.tmdb.org/t/p/w300' + poster_path,\n    title,\n    releaseDate: `${new Date(release_date).getFullYear()}`,\n    voteAverage: vote_average,\n    voteCount: vote_count,\n    overview,\n    genres,\n    homepage,\n    tagline\n  };\n  console.log('details', response);\n  return movieDetails;\n};\n\nconst getMovieCast = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let cast = [];\n  console.log('CAST', response);\n  response.data.cast.forEach(element => {\n    const { id, profile_path, name, character } = element;\n    return cast.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      character,\n    });\n  });\n  return cast;\n};\n\nconst getMovieCrew = async id => {\n  const response = await fetchTMDB(`/movie/${id}/credits`);\n  if (response === null) {\n    return null;\n  }\n  let crew = [];\n  console.log('Crew', response);\n  response.data.crew.forEach(element => {\n    const { id, profile_path, name, department, job } = element;\n    return crew.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + profile_path,\n      name,\n      department,\n      job,\n    });\n  });\n  return crew;\n};\n\nconst getMovieReviews = async id => {\n  const response = await fetchTMDB(`/movie/${id}/reviews`);\n  if (response === null) {\n    return null;\n  }\n  let reviews = [];\n  response.data.results.forEach(element => {\n    const { id, author, content } = element;\n    return reviews.push({ id, author, content });\n  });\n  return reviews;\n};\n\nconst getMovieSimilar = async id => {\n  const response = await fetchTMDB(`/movie/${id}/similar`);\n  if (response === null) {\n    return null;\n  }\n  let similar = [];\n  console.log('SIMILAR', response);\n  response.data.results.forEach(element => {\n    const { id, poster_path, title, release_date } = element;\n    return similar.push({\n      id,\n      srcImg: 'https://image.tmdb.org/t/p/w200' + poster_path,\n      title,\n      releaseDate: `${new Date(release_date).getFullYear()}`,\n    });\n  });\n  return similar;\n};\n\nexport {\n  getTrendingMovies,\n  getQueryMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieCrew,\n  getMovieReviews,\n  getMovieSimilar,\n};\n"],"names":["useState","movieDetails","setMovieDetails","id","useParams","location","useLocation","backLinkHref","state","from","useEffect","getDetails","getMovieDetails","response","className","css","to","posterPath","includes","src","alt","title","releaseDate","Math","round","voteAverage","voteCount","tagline","overview","genres","map","element","name","homepage","href","target","rel","Suspense","fallback","Loader","fetchTMDB","urlPath","myParams","axios","params","api_key","language","page","then","console","log","catch","error","getTrendingMovies","movies","handleMoviesData","data","results","forEach","movie","push","movieId","movieTitle","getQueryMovies","query","poster_path","release_date","vote_average","vote_count","Date","getFullYear","getMovieCast","cast","profile_path","character","srcImg","getMovieCrew","crew","department","job","getMovieReviews","reviews","author","content","getMovieSimilar","similar"],"sourceRoot":""}